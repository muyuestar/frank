package com.frank.lambda;

import java.util.Arrays;
import java.util.List;
import java.util.Objects;
import java.util.stream.Collectors;

import com.alibaba.fastjson.JSON;

/**
 *
 * @author kst
 * @date 2021-11-21 20:52:16
 */
public class MenuStream {

	public static void main(String[] args) {
		List<Menu> menus = Arrays.asList(
				new Menu(1, "根节点", 0), 
				new Menu(2, "子节点1", 1), 
				new Menu(3, "子节点1.1", 2),
				new Menu(4, "子节点1.2", 2), 
				new Menu(5, "根节点1.3", 2), 
				new Menu(6, "根节点2", 1), 
				new Menu(7, "根节点2.1", 6),
				new Menu(8, "根节点2.2", 6), 
				new Menu(9, "根节点2.2.1", 8), 
				new Menu(10, "根节点2.2.2", 8),
				new Menu(11, "根节点3", 1), 
				new Menu(12, "根节点3.1", 11));
		
		// 获取父节点
		List<Menu> listMenu = menus.stream().filter(m -> m.getParentId() == 0).map((m) -> {
			m.setChildList(getChildrens(m, menus));
			return m;
		}).collect(Collectors.toList());
		System.out.println(JSON.toJSON(listMenu));
	}
	
	/**
	 * 递归查询子节点
	 * 
	 * @param root 根节点
	 * @param all  所有节点
	 * @return 根节点信息
	 */
	private static List<Menu> getChildrens(Menu root, List<Menu> all) {
		List<Menu> children = all.stream().filter(m -> {
			return Objects.equals(m.getParentId(), root.getId());
		}).map((m) -> {
			m.setChildList(getChildrens(m, all));
			return m;
		}).collect(Collectors.toList());
		return children;
	}
	
}
